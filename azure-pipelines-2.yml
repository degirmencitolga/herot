# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.sln'
    arguments: '/p:PackageLocation="$(build.artifactstagingdirectory)\\"'


- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonar'
    scannerMode: 'MSBuild'
    projectKey: 'tdsonarqube'
    projectName: 'tdsonarqube'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: false
- task: SonarQubeAnalyze@5

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $token = [System.Text.Encoding]::UTF8.GetBytes($env:"SonarToken" + ":")
      $base64 = [System.Convert]::ToBase64String($token)
       
      $basicAuth = [string]::Format("Basic {0}", $base64)
      $headers = @{ Authorization = $basicAuth }
       
      $result = Invoke-RestMethod -Method Get -Uri http://sonarqubetolga.westeurope.cloudapp.azure.com:9000/api/qualitygates/project_status?projectKey=tdsonarqube -Headers $headers
      $result | ConvertTo-Json | Write-Host
       
      if ($result.projectStatus.status -eq "OK") {
      Write-Host "Quality Gate Succeeded"
      }else{
      throw "Quality gate failed"
      }
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'